{"version":3,"sources":["store/actions.js","list-notes/list-notes.js","add-note/add-note.js","edit-note/edit-note.js","current-note/current-note.js","app/app.js","store/redusers.js","index.js","store/localStorage.js","store/throttle.js"],"names":["ACTION_SAVE_NOTE","ACTION_SHOW_CURRENT_NOTE","ACTION_HIDE_CURRENT_NOTE","ACTION_SHOW_FORM_NEW_NOTE","ACTION_EDIT_NOTE","ACTION_DELETE_NOTE","ACTION_SAVE_COMMENT","noteToSave","data","type","payload","showCurrentNote","hideCurrentNote","showFormNewNote","edidCurrentNote","deleteNote","id","addComment","ListNotes","allNotes","_this$props","this","props","notes","length","map","el","react_default","a","createElement","key","className","onClick","name","content","Component","connect","state","actions","AddNote","error","changeNameNote","e","_this","setState","target","value","changeContentNote","saveNote","note","_this2","_this$state","errorBlock","placeholder","onChange","defaultValue","EditNote","currentNote","CurrentNote","author_comment","content_comment","visibleCommentPanel","changeContentComment","changeAuthorComment","saveComment","split","date","Date","year","getFullYear","month","getMonth","day","getDate","createDate","concat","toUpperCase","slice","join","comment","idCurrentNote","showAddComment","closeCommentPanel","comments","buttonComment","panelComment","addCommentPanel","arrComments","filter","reverse","App","visibleCurrentNote","visibleAddNewNote","visibleEditNewNote","current_note_current_note","list_notes_list_notes","addNote","add_note_add_note","editNote","edit_note_edit_note","initialState","lastId","getNextId","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","arguments","undefined","action","newComment","nextId","Object","objectSpread","toConsumableArray","noteCurrentId","itemIndex","findIndex","newItem","newNote","noteDeleteId","newArrComments","subscribe","func","ms","savedArgs","savedThis","isThrottled","throttle","stringify","setItem","_unused","saveState","getState","ReactDOM","render","es","app_app","document","getElementById"],"mappings":"8+BAAaA,EAAmB,mBACnBC,EAA2B,2BAC3BC,EAA2B,2BAC3BC,EAA4B,4BAC5BC,EAAmB,mBACnBC,EAAqB,qBACrBC,EAAsB,sBAGtBC,EAAa,SAACC,GACvB,MAAO,CACHC,KAAMT,EACNU,QAASF,IAIJG,EAAkB,SAACH,GAC5B,MAAO,CACHC,KAAMR,EACNS,QAASF,IAIJI,EAAkB,WAC3B,MAAO,CACHH,KAAMP,IAIDW,EAAkB,WAC3B,MAAO,CACHJ,KAAMN,IAIDW,EAAkB,WAC3B,MAAO,CACHL,KAAML,IAIDW,EAAa,SAACC,GACvB,MAAO,CACHP,KAAMJ,EACNK,QAASM,IAIJC,EAAa,SAACT,GACvB,MAAO,CACHC,KAAMH,EACNI,QAASF,IC7CXU,0LAEO,IAGDC,EAHCC,EAC0CC,KAAKC,MAA/CC,EADAH,EACAG,MAAMZ,EADNS,EACMT,gBAAiBE,EADvBO,EACuBP,gBAiB5B,OAbIM,EADDI,EAAMC,OACMD,EAAME,IAAK,SAACC,GACnB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,IAAKJ,EAAGV,GAAIe,UAAU,aAAaC,QAAU,kBAAMrB,EAAgBe,KACpEC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQL,EAAGO,MACtBN,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWL,EAAGQ,YAK9BP,EAAAC,EAAAC,cAAA,4BAIXF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQpB,KAAK,SACLsB,UAAU,+BACVC,QAAU,kBAAMnB,MAFxB,oBAMJc,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACZZ,WA9BKgB,cAuCTC,cAFS,SAACC,GAAD,OAAWA,GAEKC,EAAzBF,CAAkClB,GCtC3CqB,oNAEFF,MAAQ,CACJJ,KAAM,GACNC,QAAS,GACTM,OAAO,KAGXC,eAAiB,SAACC,GACdC,EAAKC,SAAS,CACVX,KAAKS,EAAEG,OAAOC,WAItBC,kBAAoB,SAACL,GACjBC,EAAKC,SAAS,CACVV,QAAQQ,EAAEG,OAAOC,WAIzBE,SAAW,WAEP,GAAGL,EAAKN,MAAMJ,KAAKT,OAAS,GAAKmB,EAAKN,MAAMH,QAAQV,OAAS,EACzDmB,EAAKC,SAAS,CACVJ,OAAO,QAER,CACH,IAAIS,EAAO,CACPhB,KAAMU,EAAKN,MAAMJ,KACjBC,QAASS,EAAKN,MAAMH,SAGxBS,EAAKrB,MAAMf,WAAW0C,6EAMrB,IAAAC,EAAA7B,KAAA8B,EAEwB9B,KAAKgB,MAA7BG,EAFAW,EAEAX,MAAOP,EAFPkB,EAEOlB,KAAMC,EAFbiB,EAEajB,QAEdkB,EAAaZ,EAAQb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAf,wBAA6D,KAEtF,OACIJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,2BAEHuB,EACDzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SACQE,UAAU,eACVtB,KAAK,OACL4C,YAAY,QACZC,SAAU,SAACZ,GAAOQ,EAAKT,eAAeC,IACtCI,MAAOb,KAGnBN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,YAAUE,UAAU,gBAAgBsB,YAAY,UACxCC,SAAU,SAACZ,GAAOQ,EAAKH,kBAAkBL,IAEzCa,aAAcrB,KAG1BP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,UAAQpB,KAAK,SACLsB,UAAU,kBACVC,QAAS,WAAQkB,EAAKF,aAF9B,QAIArB,EAAAC,EAAAC,cAAA,UAAQpB,KAAK,SACLsB,UAAU,iBACVC,QAAU,WAAOkB,EAAK5B,MAAMV,oBAFpC,oBAzEEuB,cAuFPC,cAFS,SAACC,GAAD,OAAWA,GAEKC,EAAzBF,CAAkCG,GCvF3CiB,oNAEFnB,MAAQ,CACJrB,GAAI2B,EAAKrB,MAAMmC,YAAYzC,GAC3BiB,KAAMU,EAAKrB,MAAMmC,YAAYxB,KAC7BC,QAASS,EAAKrB,MAAMmC,YAAYvB,QAChCM,OAAO,KAGXC,eAAiB,SAACC,GACdC,EAAKC,SAAS,CACVX,KAAKS,EAAEG,OAAOC,WAItBC,kBAAoB,SAACL,GACjBC,EAAKC,SAAS,CACVV,QAAQQ,EAAEG,OAAOC,WAIzBE,SAAW,WAEP,GAAGL,EAAKN,MAAMJ,KAAKT,OAAS,GAAKmB,EAAKN,MAAMH,QAAQV,OAAS,EACzDmB,EAAKC,SAAS,CACVJ,OAAO,QAER,CACH,IAAIS,EAAO,CACPjC,GAAI2B,EAAKN,MAAMrB,GACfiB,KAAMU,EAAKN,MAAMJ,KACjBC,QAASS,EAAKN,MAAMH,SAGxBS,EAAKrB,MAAMf,WAAW0C,6EAIrB,IAAAC,EAAA7B,KAAA8B,EAE4B9B,KAAKgB,MAAjCG,EAFAW,EAEAX,MAAOxB,EAFPmC,EAEOnC,GAAIiB,EAFXkB,EAEWlB,KAAMC,EAFjBiB,EAEiBjB,QAFjBd,EAG+BC,KAAKC,MAApCV,EAHAQ,EAGAR,gBAAiBG,EAHjBK,EAGiBL,WAClBqC,EAAaZ,EAAQb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAf,wBAA8D,KAEvF,OACIJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,wBAEHuB,EACDzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SACQE,UAAU,eACVtB,KAAK,OACL4C,YAAY,QACZC,SAAU,SAACZ,GAAOQ,EAAKT,eAAeC,IACtCI,MAAOb,KAGnBN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,YAAUE,UAAU,gBAAgBsB,YAAY,UACxCC,SAAU,SAACZ,GAAOQ,EAAKH,kBAAkBL,IAEzCa,aAAcrB,KAG1BP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAEXJ,EAAAC,EAAAC,cAAA,UAAQpB,KAAK,SACLsB,UAAU,kBACVC,QAAS,WAAQkB,EAAKF,aAF9B,QAIArB,EAAAC,EAAAC,cAAA,UAAQpB,KAAK,SACLsB,UAAU,kBACVC,QAAU,kBAAMpB,MAFxB,UAGAe,EAAAC,EAAAC,cAAA,UAAQpB,KAAK,SACLsB,UAAU,iBACVC,QAAU,kBAAMjB,EAAWC,KAFnC,oBA7EGmB,cA4FRC,cAFS,SAACC,GAAD,OAAWA,GAEKC,EAAzBF,CAAkCoB,GC9F3CE,oNAEFrB,MAAQ,CACJsB,eAAgB,GAChBC,gBAAiB,GACjBC,qBAAqB,EACrBrB,OAAO,KAGXsB,qBAAuB,SAACpB,GACpBC,EAAKC,SAAS,CACVgB,gBAAiBlB,EAAEG,OAAOC,WAIlCiB,oBAAsB,SAACrB,GACnBC,EAAKC,SAAS,CACVe,eAAgBjB,EAAEG,OAAOC,WAIjCkB,YAAc,WAEX,GAAmD,IAAhDrB,EAAKN,MAAMsB,eAAeM,MAAM,KAAKzC,QAAgBmB,EAAKN,MAAMuB,gBAAgBpC,OAAS,EACvFmB,EAAKC,SAAS,CACVJ,OAAO,QAER,CACH,IAAI0B,EAAO,IAAIC,KACXC,EAAOF,EAAKG,cACZC,EAAQJ,EAAKK,WAAY,EACzBC,EAAMN,EAAKO,UAEXC,EAAU,GAAAC,OAAMH,EAAN,KAAAG,OAAaL,EAAb,KAAAK,OAAsBP,GAEhCT,EADqBhB,EAAKN,MAAMsB,eAAeM,MAAM,KACjBxC,IAAK,SAACC,GAC1C,OAAOA,EAAG,GAAGkD,cAAgBlD,EAAGmD,MAAM,KACtCC,KAAK,KAELC,EAAU,CACVC,cAAerC,EAAKrB,MAAMmC,YAAYzC,GACtC4C,gBAAiBjB,EAAKN,MAAMuB,gBAC5Bc,aACAf,kBAEJhB,EAAKrB,MAAML,WAAW8D,GACtBpC,EAAKC,SAAS,CACViB,qBAAqB,EACrBrB,OAAO,EACPmB,eAAgB,GAChBC,gBAAiB,SAK7BqB,eAAiB,WACbtC,EAAKC,SAAS,CACViB,qBAAqB,OAG7BqB,kBAAoB,WAChBvC,EAAKC,SAAS,CACViB,qBAAqB,EACrBrB,OAAO,EACPmB,eAAgB,GAChBC,gBAAiB,8EAIhB,IAAAV,EAAA7B,KAAA8B,EAC+D9B,KAAKgB,MAApEG,EADAW,EACAX,MAAOmB,EADPR,EACOQ,eAAgBC,EADvBT,EACuBS,gBAAiBC,EADxCV,EACwCU,oBADxCzC,EAE2DC,KAAKC,MAAhE6D,EAFA/D,EAEA+D,SAAU1B,EAFVrC,EAEUqC,YAAa3C,EAFvBM,EAEuBN,gBAAiBF,EAFxCQ,EAEwCR,gBAEzCwE,EACAzD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACXJ,EAAAC,EAAAC,cAAA,UAAQpB,KAAK,SACLsB,UAAU,eACVC,QAAU,WAAOkB,EAAK+B,mBAF9B,gBAKJI,EACA1D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOpB,KAAK,OACRsB,UAAU,kCACVsB,YAAY,cACZP,MAAOa,EACPL,SAAU,SAACZ,GAAOQ,EAAKa,oBAAoBrB,MAE/Cf,EAAAC,EAAAC,cAAA,YAAUpB,KAAK,OACPsB,UAAU,qCACVsB,YAAY,wBACZP,MAAOc,EACPN,SAAU,SAACZ,GAAQQ,EAAKY,qBAAqBpB,OAGzDf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,UAAQpB,KAAK,SACLsB,UAAU,iBACVC,QAAS,WAAOkB,EAAKgC,sBAF7B,UAGAvD,EAAAC,EAAAC,cAAA,UAAQpB,KAAK,SACLsB,UAAU,kBACVC,QAAS,WAAOkB,EAAKc,gBAF7B,aAQRsB,EAAkBzB,EAAsBwB,EAAeD,EACvDhC,EAAaZ,EAAQb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAf,iDAA6E,KAElGwD,EAAcJ,EAASK,OAAO,SAAC9D,GAAD,OAAQA,EAAGsD,gBAAkBvB,EAAYzC,KAChDS,IAAK,SAACC,GACD,OACIC,EAAAC,EAAAC,cAAA,OAAKC,IAAKJ,EAAGV,GAAIe,UAAU,gBACvBJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAAUL,EAAGiC,gBADjC,IACwDhC,EAAAC,EAAAC,cAAA,QAAME,UAAU,eAAeL,EAAGgD,aAE1F/C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACVL,EAAGkC,oBAKrB6B,UAG3B,OACI9D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACV0B,EAAYxB,MAEjBN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACd0B,EAAYvB,UAGjBP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,UAAQpB,KAAK,SACLsB,UAAU,2BACVC,QAAU,kBAAMlB,MAFxB,QAGAa,EAAAC,EAAAC,cAAA,UAAQpB,KAAK,SACLsB,UAAU,2BACVC,QAAS,kBAAMpB,MAFvB,WAMRe,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,WACKuB,EACAkC,EACL3D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACVwD,aA3JHpD,cAuKXC,cAFS,SAACC,GAAD,OAAWA,GAEKC,EAAzBF,CAAkCsB,GC/J3CgC,mLAEO,IAAAtE,EAC6DC,KAAKC,MAAlEqE,EADAvE,EACAuE,mBAAoBC,EADpBxE,EACoBwE,kBAAmBC,EADvCzE,EACuCyE,mBAEzCpC,EAAckC,EAAqBhE,EAAAC,EAAAC,cAACiE,EAAD,MAAkBnE,EAAAC,EAAAC,cAACkE,EAAD,MACrDC,EAAUJ,EAAoBjE,EAAAC,EAAAC,cAACoE,EAAD,MAAc,KAC5CC,EAAWL,EAAqBlE,EAAAC,EAAAC,cAACsE,EAAD,MAAe,KAEnD,OACIxE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACTiE,EACAE,EACAzC,UAbCtB,aAwBHC,cAJS,SAACC,GACrB,OAAOA,GAG6BC,EAAzBF,CAAkCsD,0BC5B3CU,EAAe,CACjB7E,MAAO,GACP4D,SAAU,GACVQ,oBAAoB,EACpBC,mBAAmB,EACnBC,oBAAoB,EACpBQ,OAAQ,EACR5C,YAAa,IAGX6C,EAAY,SAACD,GACf,OAAOA,EAAS,GCPpB,IAAME,ECbmB,WACrB,IACE,IAAMC,EAAkBC,aAAaC,QAAS,SAC9C,GAAwB,OAApBF,EACF,OAEF,OAAOG,KAAKC,MAAOJ,GACnB,MAAOK,GACP,QDKiBC,GACjBC,EAAQC,YDSS,WAAkC,IAAjC3E,EAAiC4E,UAAAzF,OAAA,QAAA0F,IAAAD,UAAA,GAAAA,UAAA,GAAzBb,EAAce,EAAWF,UAAAzF,OAAA,EAAAyF,UAAA,QAAAC,EACrD,OAAQC,EAAO1G,MACX,KAAKH,EACD,IAAI8G,EAAaD,EAAOzG,QACpB2G,EAASf,EAAUjE,EAAMgE,QAE7B,OADAe,EAAWpG,GAAKqG,EACTC,OAAAC,EAAA,EAAAD,CAAA,GACAjF,EADP,CAEIgE,OAAQgB,EACRlC,SAAQ,GAAAR,OAAA2C,OAAAE,EAAA,EAAAF,CACDjF,EAAM8C,UADL,CAEJgC,EAAOzG,YAInB,KAAKT,EACD,OAAOqH,OAAAC,EAAA,EAAAD,CAAA,GACAjF,EADP,CAEIsD,oBAAoB,EACpBlC,YAAa0D,EAAOzG,UAG5B,KAAKP,EACD,OAAOmH,OAAAC,EAAA,EAAAD,CAAA,GACAjF,EADP,CAEIuD,mBAAmB,IAG3B,KAAK1F,EACD,OAAOoH,OAAAC,EAAA,EAAAD,CAAA,GACAjF,EADP,CAEIuD,mBAAmB,EACnBD,oBAAoB,EACpBE,oBAAoB,IAG5B,KAAKzF,EACD,OAAOkH,OAAAC,EAAA,EAAAD,CAAA,GACAjF,EADP,CAEIwD,oBAAoB,IAG5B,KAAK7F,EACD,IAAMyH,EAAgBN,EAAOzG,QAAQM,GAErC,GAAIyG,EAAe,CACf,IAAMC,EAAYrF,EAAMd,MAAMoG,UAAU,SAACjG,GAAD,OAAQA,EAAGV,KAAOyG,IAEpDG,EAAU,CACZ5G,GAFSqB,EAAMd,MAAMmG,GAEZ1G,GACTiB,KAAMkF,EAAOzG,QAAQuB,KACrBC,QAASiF,EAAOzG,QAAQwB,SAG5B,OAAOoF,OAAAC,EAAA,EAAAD,CAAA,GACAjF,EADP,CAEIuD,mBAAmB,EACnBC,oBAAoB,EACpBpC,YAAamE,EAEbrG,MAAK,GAAAoD,OAAA2C,OAAAE,EAAA,EAAAF,CACEjF,EAAMd,MAAMsD,MAAM,EAAG6C,IADvB,CAEDE,GAFCN,OAAAE,EAAA,EAAAF,CAGEjF,EAAMd,MAAMsD,MAAM6C,EAAY,OAIzC,IAAMG,EAAUV,EAAOzG,QAEvB,OADAmH,EAAQ7G,GAAKsF,EAAUjE,EAAMgE,QACtBiB,OAAAC,EAAA,EAAAD,CAAA,GACAjF,EADP,CAEIgE,OAAQC,EAAUjE,EAAMgE,QACxBT,mBAAmB,EACnBC,oBAAoB,EACpBF,oBAAoB,EACpBpE,MAAK,GAAAoD,OAAA2C,OAAAE,EAAA,EAAAF,CACEjF,EAAMd,OADR,CACesG,MAK5B,KAAKxH,EACD,IAAMyH,EAAeX,EAAOzG,QACtBgH,EAAYrF,EAAMd,MAAMoG,UAAU,SAACjG,GAAD,OAAQA,EAAGV,KAAO8G,IACpDC,EAAiB1F,EAAM8C,SAASK,OAAQ,SAAC9D,GAAD,OAAQA,EAAGsD,gBAAkB8C,IAE3E,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAjF,EADP,CAEI8C,SAAU4C,EACVnC,mBAAmB,EACnBC,oBAAoB,EACpBF,oBAAoB,EACpBpE,MAAK,GAAAoD,OAAA2C,OAAAE,EAAA,EAAAF,CACEjF,EAAMd,MAAMsD,MAAM,EAAG6C,IADvBJ,OAAAE,EAAA,EAAAF,CAEEjF,EAAMd,MAAMsD,MAAM6C,EAAY,OAKjD,QACI,OAAOrF,IC7GgBkE,GAEnCQ,EAAMiB,UAAU,YEhBT,SAAkBC,EAAMC,GAE3B,IACEC,EACAC,EAFEC,GAAc,EFenBC,CAAS,YCJa,SAACjG,GACtB,IACE,IAAMmE,EAAkBG,KAAK4B,UAAUlG,GACvCoE,aAAa+B,QAAQ,QAAShC,GAC9B,MAAAiC,KDCAC,CAAU3B,EAAM4B,aACd,OAGRC,IAASC,OAAQlH,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAU/B,MAAOA,GACdpF,EAAAC,EAAAC,cAACkH,EAAD,OACWC,SAASC,eAAe","file":"static/js/main.30835565.chunk.js","sourcesContent":["export const ACTION_SAVE_NOTE = 'ACTION_SAVE_NOTE';\r\nexport const ACTION_SHOW_CURRENT_NOTE = 'ACTION_SHOW_CURRENT_NOTE';\r\nexport const ACTION_HIDE_CURRENT_NOTE = 'ACTION_HIDE_CURRENT_NOTE';\r\nexport const ACTION_SHOW_FORM_NEW_NOTE = 'ACTION_SHOW_FORM_NEW_NOTE';\r\nexport const ACTION_EDIT_NOTE = 'ACTION_EDIT_NOTE';\r\nexport const ACTION_DELETE_NOTE = 'ACTION_DELETE_NOTE';\r\nexport const ACTION_SAVE_COMMENT = 'ACTION_SAVE_COMMENT';\r\n\r\n\r\nexport const noteToSave = (data) => {\r\n    return {\r\n        type: ACTION_SAVE_NOTE,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const showCurrentNote = (data) => {\r\n    return {\r\n        type: ACTION_SHOW_CURRENT_NOTE,\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const hideCurrentNote = () => {\r\n    return {\r\n        type: ACTION_HIDE_CURRENT_NOTE,\r\n    }\r\n};\r\n\r\nexport const showFormNewNote = () => {\r\n    return {\r\n        type: ACTION_SHOW_FORM_NEW_NOTE,\r\n    }\r\n};\r\n\r\nexport const edidCurrentNote = () => {\r\n    return {\r\n        type: ACTION_EDIT_NOTE,\r\n    }\r\n};\r\n\r\nexport const deleteNote = (id) => {\r\n    return {\r\n        type: ACTION_DELETE_NOTE,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const addComment = (data) => {\r\n    return {\r\n        type: ACTION_SAVE_COMMENT,\r\n        payload: data\r\n    }\r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport './list-notes.css';\r\n\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\nclass ListNotes extends Component {\r\n\r\n    render() {\r\n        let {notes,showCurrentNote, showFormNewNote} = this.props;\r\n        \r\n        let allNotes;\r\n        if(notes.length) {\r\n            allNotes = notes.map( (el) => {\r\n                return (\r\n                    <div key={el.id} className=\"notes_item\" onClick={ () => showCurrentNote(el) }>\r\n                        <div className=\"name\">{el.name}</div>\r\n                            <hr></hr>\r\n                        <div className=\"content\">{el.content}</div>\r\n                    </div>\r\n                );\r\n            } ); \r\n        } else {\r\n            allNotes = <div>No notes yet!</div>\r\n        }\r\n\r\n        return (\r\n            <div className=\"list-notes\">\r\n                <div>\r\n                    <button type=\"button\"\r\n                            className=\"btn-new-note btn btn-success\"\r\n                            onClick={ () => showFormNewNote() }\r\n                            >Create new note\r\n                    </button>\r\n                </div>\r\n                <div className=\"listNotes\">\r\n                  {allNotes}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nexport default connect(mapStateToProps, actions)(ListNotes)","import React, {Component} from 'react';\r\n\r\nimport './add-note.css';\r\n\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\nclass AddNote extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        content: \"\",\r\n        error: false\r\n    }\r\n\r\n    changeNameNote = (e) => {\r\n        this.setState({\r\n            name:e.target.value\r\n        })\r\n        }\r\n\r\n    changeContentNote = (e) => {\r\n        this.setState({\r\n            content:e.target.value\r\n        })\r\n    }\r\n\r\n    saveNote = () => {\r\n        \r\n        if(this.state.name.length < 1 || this.state.content.length < 1) {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        } else {\r\n            let note = {\r\n                name: this.state.name,\r\n                content: this.state.content\r\n            };\r\n    \r\n            this.props.noteToSave(note);\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let {error, name, content} = this.state;\r\n\r\n        let errorBlock = error ? <div className=\"error-add-note\">Fill in both fields!</div> : null;\r\n\r\n        return (\r\n            <div className=\"box-wrapper\">\r\n                <div className=\"box-wrapper-inner\"></div>\r\n                <div className=\"add-note form-group\">\r\n                <div className=\"new-note\">\r\n                    <p>ADD NEW NOTE!</p>\r\n                </div>\r\n                {errorBlock}\r\n                <div className=\"input-name\">\r\n                    <input \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            placeholder=\"Title\"\r\n                            onChange={(e) => {this.changeNameNote(e)}}\r\n                            value={name}\r\n                            ></input>\r\n                </div>\r\n                <div className=\"input-content\">\r\n                    <textarea className=\"form-control \" placeholder=\"Content\"\r\n                            onChange={(e) => {this.changeContentNote(e)}}\r\n                            \r\n                            defaultValue={content}\r\n                    ></textarea>\r\n                </div>\r\n                <div className=\"buttom-note\">\r\n                    <button type=\"button\" \r\n                            className=\"btn btn-success\"\r\n                            onClick={() => { this.saveNote() }}\r\n                            >Save</button>\r\n                    <button type=\"button\" \r\n                            className=\"btn btn-danger\"\r\n                            onClick={ () => {this.props.hideCurrentNote()} }>Cancel</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nexport default connect(mapStateToProps, actions)(AddNote);","import React, {Component} from 'react';\r\n\r\nimport './edit-note.css';\r\n\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\nclass EditNote extends Component {\r\n\r\n    state = {\r\n        id: this.props.currentNote.id,\r\n        name: this.props.currentNote.name,\r\n        content: this.props.currentNote.content,\r\n        error: false\r\n    }\r\n\r\n    changeNameNote = (e) => {\r\n        this.setState({\r\n            name:e.target.value\r\n        })\r\n    }\r\n\r\n    changeContentNote = (e) => {\r\n        this.setState({\r\n            content:e.target.value\r\n        })\r\n    }\r\n\r\n    saveNote = () => {\r\n\r\n        if(this.state.name.length < 1 || this.state.content.length < 1) {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        } else {\r\n            let note = {\r\n                id: this.state.id,\r\n                name: this.state.name,\r\n                content: this.state.content\r\n            };\r\n    \r\n            this.props.noteToSave(note);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let {error, id, name, content} = this.state;\r\n        let {hideCurrentNote, deleteNote} = this.props;\r\n        let errorBlock = error ? <div className=\"error-edit-note\">Fill in both fields!</div> : null;\r\n\r\n        return (\r\n            <div className=\"box-wrapper\">\r\n                <div className=\"box-wrapper-inner\"></div>\r\n                <div className=\"add-note form-group\">\r\n                <div className=\"new-note\">\r\n                    <p>EDIT NOTE!</p>\r\n                </div>\r\n                {errorBlock}\r\n                <div className=\"input-name\">\r\n                    <input \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            placeholder=\"Title\"\r\n                            onChange={(e) => {this.changeNameNote(e)}}\r\n                            value={name}\r\n                            ></input>\r\n                </div>\r\n                <div className=\"input-content\">\r\n                    <textarea className=\"form-control \" placeholder=\"Content\"\r\n                            onChange={(e) => {this.changeContentNote(e)}}\r\n                            \r\n                            defaultValue={content}\r\n                    ></textarea>\r\n                </div>\r\n                <div className=\"buttom-note\">\r\n                   \r\n                    <button type=\"button\" \r\n                            className=\"btn btn-success\"\r\n                            onClick={() => { this.saveNote() }}\r\n                            >Save</button>\r\n                    <button type=\"button\" \r\n                            className=\"btn btn-warning\"\r\n                            onClick={ () => hideCurrentNote() }>Cancel</button>\r\n                    <button type=\"button\" \r\n                            className=\"btn btn-danger\"\r\n                            onClick={ () => deleteNote(id) }\r\n                            >Delete</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nexport default connect(mapStateToProps, actions)(EditNote);","import React, {Component} from 'react';\r\nimport './current-note.css';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\nclass CurrentNote extends Component {\r\n\r\n    state = {\r\n        author_comment: '',\r\n        content_comment: '',\r\n        visibleCommentPanel: false,\r\n        error: false\r\n    }\r\n\r\n    changeContentComment = (e) => {\r\n        this.setState({\r\n            content_comment: e.target.value\r\n        })\r\n    }\r\n\r\n    changeAuthorComment = (e) => {\r\n        this.setState({\r\n            author_comment: e.target.value\r\n        })\r\n    }\r\n\r\n    saveComment = () => {\r\n        \r\n       if(this.state.author_comment.split(\" \").length !== 2 || this.state.content_comment.length < 1) {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        } else {\r\n            let date = new Date();\r\n            let year = date.getFullYear();\r\n            let month = date.getMonth() +1;\r\n            let day = date.getDate();\r\n\r\n            let createDate = `${day}-${month}-${year}`;\r\n            let arr_author_comment = this.state.author_comment.split(\" \");\r\n            let author_comment = arr_author_comment.map( (el) => {\r\n                return el[0].toUpperCase() + el.slice(1);\r\n            } ).join(\" \");\r\n\r\n            let comment = {\r\n                idCurrentNote: this.props.currentNote.id,\r\n                content_comment: this.state.content_comment,\r\n                createDate,\r\n                author_comment\r\n            };\r\n            this.props.addComment(comment);\r\n            this.setState({\r\n                visibleCommentPanel: false,\r\n                error: false,\r\n                author_comment: '',\r\n                content_comment: ''\r\n            });\r\n        }\r\n    }\r\n\r\n    showAddComment = () => {\r\n        this.setState({\r\n            visibleCommentPanel: true\r\n        })\r\n    }\r\n    closeCommentPanel = () => {\r\n        this.setState({\r\n            visibleCommentPanel: false,\r\n            error: false,\r\n            author_comment: '',\r\n            content_comment: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let {error, author_comment, content_comment, visibleCommentPanel} = this.state;\r\n        let {comments, currentNote, edidCurrentNote, hideCurrentNote} = this.props;\r\n\r\n        let buttonComment = (\r\n            <div className=\"button-add-comment\">\r\n                <button type=\"button\" \r\n                        className=\"btn btn-info\"\r\n                        onClick={ () => {this.showAddComment()} }>Add Comment</button>\r\n            </div>\r\n        );\r\n        let panelComment = (\r\n            <div> \r\n                <div>\r\n                    <input type=\"text\"\r\n                        className=\"form-control input-name-comment\"\r\n                        placeholder=\"Ivan Ivanov\"\r\n                        value={author_comment}\r\n                        onChange={(e) => {this.changeAuthorComment(e)}}\r\n                        ></input>   \r\n                    <textarea type=\"text\"\r\n                            className=\"form-control input-content-comment\"\r\n                            placeholder=\"Leave your comment...\"\r\n                            value={content_comment}\r\n                            onChange={(e) => { this.changeContentComment(e) }}\r\n                            ></textarea>\r\n                </div>\r\n                <div className=\"btn-comments\">\r\n                    <button type=\"button\" \r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => {this.closeCommentPanel()}}>Cancel</button>\r\n                    <button type=\"button\" \r\n                            className=\"btn btn-success\"\r\n                            onClick={() => {this.saveComment()}}\r\n                            >Comment</button>  \r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n        let addCommentPanel = visibleCommentPanel ? panelComment : buttonComment;\r\n        let errorBlock = error ? <div className=\"error\">Fill in both fields! ( Author : Ivan Ivanov )</div> : null;\r\n\r\n        let arrComments = comments.filter((el) => el.idCurrentNote === currentNote.id)\r\n                                  .map( (el) => {\r\n                                        return (\r\n                                            <div key={el.id} className=\"item-comment\">\r\n                                                <div >\r\n                                                    <span className=\"author\">{el.author_comment}</span> <span className=\"create-date\">{el.createDate}</span> \r\n                                                </div>\r\n                                                <div className=\"content\">\r\n                                                    {el.content_comment}\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                  .reverse();\r\n        // console.log(arrComments);\r\n\r\n        return (\r\n            <div className=\"wrapper-current-note\">\r\n                <div className=\"current-note\">\r\n                    <div className=\"note\">\r\n                        <div className=\"box-note\">\r\n                            <div className=\"name-note\">\r\n                                {currentNote.name}\r\n                            </div>\r\n                            <hr></hr>\r\n                            <div className=\"content-note\">\r\n                            {currentNote.content}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"btn-view-note\">\r\n                            <button type=\"button\" \r\n                                    className=\"btn btn-primary btn-edit\"\r\n                                    onClick={ () => edidCurrentNote() }>Edit</button>\r\n                            <button type=\"button\" \r\n                                    className=\"btn btn-danger btn-close\"\r\n                                    onClick={() => hideCurrentNote() }\r\n                                    >Close</button>  \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"note-comments\">\r\n                        <hr></hr>\r\n                            {errorBlock}\r\n                            {addCommentPanel}\r\n                        <div className=\"list-comment\">\r\n                            {arrComments}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nexport default connect(mapStateToProps, actions)(CurrentNote);","import React, {Component} from 'react';\r\n\r\nimport './app.css';\r\n\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\nimport ListNotes from '../list-notes/list-notes';\r\nimport AddNote from '../add-note/add-note';\r\nimport EditNote from '../edit-note/edit-note';\r\n\r\nimport CurrentNote from '../current-note/current-note';\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        let {visibleCurrentNote, visibleAddNewNote, visibleEditNewNote} = this.props;\r\n        \r\n       let currentNote = visibleCurrentNote ? <CurrentNote /> : <ListNotes />;\r\n       let addNote = visibleAddNewNote ? <AddNote /> : null;\r\n       let editNote = visibleEditNewNote ? <EditNote /> : null;\r\n       \r\n       return (\r\n           <div className=\"container\">\r\n                {addNote}\r\n                {editNote}\r\n                {currentNote}\r\n           </div>\r\n                \r\n       );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(App);","import {ACTION_SAVE_NOTE,\r\n        ACTION_SHOW_CURRENT_NOTE,\r\n        ACTION_HIDE_CURRENT_NOTE,\r\n        ACTION_SHOW_FORM_NEW_NOTE,\r\n        ACTION_EDIT_NOTE,\r\n        ACTION_DELETE_NOTE,\r\n        ACTION_SAVE_COMMENT\r\n    } from './actions';\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    comments: [],\r\n    visibleCurrentNote: false,\r\n    visibleAddNewNote: false,\r\n    visibleEditNewNote: false,\r\n    lastId: 0,\r\n    currentNote: {}\r\n}\r\n\r\nconst getNextId = (lastId) => {\r\n    return lastId + 1;\r\n}\r\n\r\nexport const reduser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTION_SAVE_COMMENT:\r\n            let newComment = action.payload;\r\n            let nextId = getNextId(state.lastId);\r\n            newComment.id = nextId;\r\n            return {\r\n                ...state,\r\n                lastId: nextId,\r\n                comments: [\r\n                    ...state.comments,\r\n                    action.payload\r\n                ]\r\n            };\r\n        \r\n        case ACTION_SHOW_CURRENT_NOTE:\r\n            return {\r\n                ...state,\r\n                visibleCurrentNote: true,\r\n                currentNote: action.payload\r\n            };\r\n\r\n        case ACTION_SHOW_FORM_NEW_NOTE:\r\n            return {\r\n                ...state,\r\n                visibleAddNewNote: true,\r\n            };\r\n\r\n        case ACTION_HIDE_CURRENT_NOTE:\r\n            return {\r\n                ...state,\r\n                visibleAddNewNote: false,\r\n                visibleCurrentNote: false,\r\n                visibleEditNewNote: false\r\n            };\r\n\r\n        case ACTION_EDIT_NOTE:\r\n            return {\r\n                ...state,\r\n                visibleEditNewNote: true\r\n            };\r\n\r\n        case ACTION_SAVE_NOTE:\r\n            const noteCurrentId = action.payload.id;\r\n\r\n            if (noteCurrentId) {\r\n                const itemIndex = state.notes.findIndex((el) => el.id === noteCurrentId);\r\n                const item = state.notes[itemIndex];\r\n                const newItem = {\r\n                    id: item.id,\r\n                    name: action.payload.name,\r\n                    content: action.payload.content\r\n                };\r\n\r\n                return {\r\n                    ...state,\r\n                    visibleAddNewNote: false,\r\n                    visibleEditNewNote: false,\r\n                    currentNote: newItem,\r\n                    // visibleCurrentNote: false,\r\n                    notes: [\r\n                        ...state.notes.slice(0, itemIndex),\r\n                        newItem,\r\n                        ...state.notes.slice(itemIndex + 1) \r\n                    ] \r\n                }\r\n            } else {\r\n                const newNote = action.payload;\r\n                newNote.id = getNextId(state.lastId);\r\n                return {\r\n                    ...state,\r\n                    lastId: getNextId(state.lastId),\r\n                    visibleAddNewNote: false,\r\n                    visibleEditNewNote: false,\r\n                    visibleCurrentNote: false,\r\n                    notes: [\r\n                        ...state.notes, newNote\r\n                    ] \r\n                }\r\n            };\r\n\r\n            case ACTION_DELETE_NOTE:\r\n                const noteDeleteId = action.payload;\r\n                const itemIndex = state.notes.findIndex((el) => el.id === noteDeleteId);\r\n                const newArrComments = state.comments.filter( (el) => el.idCurrentNote !== noteDeleteId );\r\n    \r\n                return {\r\n                    ...state,\r\n                    comments: newArrComments,\r\n                    visibleAddNewNote: false,\r\n                    visibleEditNewNote: false,\r\n                    visibleCurrentNote: false,\r\n                    notes: [\r\n                        ...state.notes.slice(0, itemIndex),\r\n                        ...state.notes.slice(itemIndex + 1) \r\n                    ] \r\n                };\r\n\r\n    \r\n        default:\r\n            return state\r\n    }\r\n\r\n    \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app/app.js';\n\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport {reduser} from './store/redusers';\nimport { loadState, saveState} from './store/localStorage';\n\nimport {throttle} from './store/throttle';\n\nconst persistedState = loadState();\nconst store = createStore(reduser, persistedState);\n\nstore.subscribe(() => {\n   throttle(() => {\n      saveState(store.getState());\n     }, 1000); \n });\n\nReactDOM.render( <Provider store={store}>\n                    <App />\n                 </Provider> , document.getElementById('root'));\n\n","export const loadState = () => { \r\n    try { \r\n      const serializedState = localStorage.getItem ('state'); \r\n      if (serializedState === null) { \r\n        return undefined; \r\n      } \r\n      return JSON.parse (serializedState); \r\n    } catch (err) { \r\n      return undefined; \r\n    } \r\n  };\r\n\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n      const serializedState = JSON.stringify(state);\r\n      localStorage.setItem('state', serializedState);\r\n    } catch {\r\n      // ignore write errors\r\n    }\r\n  };","export function throttle(func, ms) {\r\n\r\n    var isThrottled = false,\r\n      savedArgs,\r\n      savedThis;\r\n  \r\n    function wrapper() {\r\n  \r\n      if (isThrottled) { // (2)\r\n        savedArgs = arguments;\r\n        savedThis = this;\r\n        return;\r\n      }\r\n  \r\n      func.apply(this, arguments); // (1)\r\n  \r\n      isThrottled = true;\r\n  \r\n      setTimeout(function() {\r\n        isThrottled = false; // (3)\r\n        if (savedArgs) {\r\n          wrapper.apply(savedThis, savedArgs);\r\n          savedArgs = savedThis = null;\r\n        }\r\n      }, ms);\r\n    }\r\n  \r\n    return wrapper;\r\n  }"],"sourceRoot":""}